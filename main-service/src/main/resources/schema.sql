--DROP SCHEMA public CASCADE;
--CREATE SCHEMA public;

CREATE TABLE IF NOT EXISTS users
(
    id    BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(254) NOT NULL UNIQUE,
    name  VARCHAR(250) NOT NULL
);
CREATE INDEX IF NOT EXISTS idx_users_email ON users (email);
CREATE INDEX IF NOT EXISTS idx_users_name ON users (name);

CREATE TABLE IF NOT EXISTS category
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE
);
CREATE INDEX IF NOT EXISTS idx_category_name ON category USING hash (name);

CREATE TABLE IF NOT EXISTS location
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat float NOT NULL,
    lon float NOT NULL

);

CREATE TABLE IF NOT EXISTS compilation
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN     NOT NULL,
    title  VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS event
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title              VARCHAR(120)  NOT NULL,
    description        VARCHAR(7000) NOT NULL,
    paid               BOOLEAN       NOT NULL,
    participant_limit  INTEGER       NOT NULL DEFAULT 0,
    state              VARCHAR(20)   NOT NULL,
    annotation         VARCHAR(2000) NOT NULL,
    confirmed_requests INTEGER,
    request_moderation BOOLEAN       NOT NULL DEFAULT TRUE,
    views              BIGINT,
    created_on         TIMESTAMP              DEFAULT CURRENT_TIMESTAMP,
    event_date         TIMESTAMP     NOT NULL,
    published_on       TIMESTAMP,
    category_id        BIGINT        NOT NULL,
    initiator_id       BIGINT        NOT NULL,
    location_id        BIGINT        NOT NULL,

    CONSTRAINT fk_category FOREIGN KEY (category_id) REFERENCES category (id),
    CONSTRAINT fk_initiator FOREIGN KEY (initiator_id) REFERENCES users (id),
    CONSTRAINT fk_location FOREIGN KEY (location_id) REFERENCES location (id)
);

CREATE TABLE request
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY,
    created      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status       VARCHAR(20) NOT NULL,
    requester_id BIGINT REFERENCES users (id),
    event_id     BIGINT REFERENCES event (id),
    PRIMARY KEY (requester_id, event_id)
);

CREATE TABLE IF NOT EXISTS compilation_events
(
    compilation_id BIGINT NOT NULL,
    events_id      BIGINT NOT NULL,
    PRIMARY KEY (compilation_id, events_id),
    FOREIGN KEY (compilation_id) REFERENCES compilation (id),
    FOREIGN KEY (events_id) REFERENCES event (id)
);

CREATE TABLE IF NOT EXISTS comment
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text varchar(500),
    published TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    author_id BIGINT NOT NULL,
    event_id BIGINT NOT NULL,

    CONSTRAINT fk_author FOREIGN KEY (author_id) REFERENCES users (id),
    CONSTRAINT fk_event FOREIGN KEY (event_id) REFERENCES event (id)
);
